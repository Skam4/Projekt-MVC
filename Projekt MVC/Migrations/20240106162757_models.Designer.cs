// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projekt_MVC.Data;

#nullable disable

namespace Projekt_MVC.Migrations
{
    [DbContext(typeof(ForumDB))]
    [Migration("20240106162757_models")]
    partial class models
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Projekt_MVC.Models.Dyskusja", b =>
                {
                    b.Property<int>("DyskusjaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DyskusjaId"));

                    b.Property<bool>("CzyPrzyklejony")
                        .HasColumnType("bit");

                    b.Property<int>("IdForum")
                        .HasColumnType("int");

                    b.Property<int>("IdUzytkownika")
                        .HasColumnType("int");

                    b.Property<int>("LiczbaOdpowiedzi")
                        .HasColumnType("int");

                    b.Property<int>("LiczbaOdwiedzen")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DyskusjaId");

                    b.HasIndex("IdForum");

                    b.HasIndex("IdUzytkownika");

                    b.ToTable("Dyskusja");
                });

            modelBuilder.Entity("Projekt_MVC.Models.Forum", b =>
                {
                    b.Property<int>("IdForum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdForum"));

                    b.Property<int>("IdUprawnien")
                        .HasColumnType("int");

                    b.Property<int>("LiczbaWatkow")
                        .HasColumnType("int");

                    b.Property<int>("LiczbaWiadomosci")
                        .HasColumnType("int");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdForum");

                    b.HasIndex("IdUprawnien");

                    b.ToTable("Forum");
                });

            modelBuilder.Entity("Projekt_MVC.Models.Odpowiedz", b =>
                {
                    b.Property<int>("OdpowiedzId")
                        .HasColumnType("int");

                    b.Property<int>("IdDyskusji")
                        .HasColumnType("int");

                    b.Property<int>("IdUzytkownika")
                        .HasColumnType("int");

                    b.Property<string>("Tresc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZalacznikPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OdpowiedzId");

                    b.HasIndex("IdDyskusji");

                    b.ToTable("Odpowiedzi");
                });

            modelBuilder.Entity("Projekt_MVC.Models.Ogloszenie", b =>
                {
                    b.Property<int>("IdOgloszenia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOgloszenia"));

                    b.Property<int>("IdUzytkownika")
                        .HasColumnType("int");

                    b.Property<string>("Tresc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdOgloszenia");

                    b.HasIndex("IdUzytkownika");

                    b.ToTable("Ogloszenie");
                });

            modelBuilder.Entity("Projekt_MVC.Models.Role", b =>
                {
                    b.Property<int>("IdRoli")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRoli"));

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRoli");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Projekt_MVC.Models.UprawnienieAnonimowych", b =>
                {
                    b.Property<int>("IdUprawnienia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUprawnienia"));

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUprawnienia");

                    b.ToTable("UprawnienieAnonimowych");
                });

            modelBuilder.Entity("Projekt_MVC.Models.User", b =>
                {
                    b.Property<int>("IdUzytkownika")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUzytkownika"));

                    b.Property<string>("AvatarPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Haslo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("IdRoli")
                        .HasColumnType("int");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("IdUzytkownika");

                    b.HasIndex("IdRoli");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Projekt_MVC.Models.Dyskusja", b =>
                {
                    b.HasOne("Projekt_MVC.Models.Forum", "Forum")
                        .WithMany()
                        .HasForeignKey("IdForum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projekt_MVC.Models.User", "Wlasciciel")
                        .WithMany("Dyskusje")
                        .HasForeignKey("IdUzytkownika")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forum");

                    b.Navigation("Wlasciciel");
                });

            modelBuilder.Entity("Projekt_MVC.Models.Forum", b =>
                {
                    b.HasOne("Projekt_MVC.Models.UprawnienieAnonimowych", "UprawnienieAnonimowych")
                        .WithMany("Forum")
                        .HasForeignKey("IdUprawnien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UprawnienieAnonimowych");
                });

            modelBuilder.Entity("Projekt_MVC.Models.Odpowiedz", b =>
                {
                    b.HasOne("Projekt_MVC.Models.Dyskusja", "Dyskusja")
                        .WithMany("Odpowiedzi")
                        .HasForeignKey("IdDyskusji")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projekt_MVC.Models.User", "Autor")
                        .WithMany("Odpowiedzi")
                        .HasForeignKey("OdpowiedzId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Dyskusja");
                });

            modelBuilder.Entity("Projekt_MVC.Models.Ogloszenie", b =>
                {
                    b.HasOne("Projekt_MVC.Models.User", "Uzytkownik")
                        .WithMany("Ogloszenia")
                        .HasForeignKey("IdUzytkownika")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Uzytkownik");
                });

            modelBuilder.Entity("Projekt_MVC.Models.User", b =>
                {
                    b.HasOne("Projekt_MVC.Models.Role", "Rola")
                        .WithMany("Uzytkownicy")
                        .HasForeignKey("IdRoli")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rola");
                });

            modelBuilder.Entity("Projekt_MVC.Models.Dyskusja", b =>
                {
                    b.Navigation("Odpowiedzi");
                });

            modelBuilder.Entity("Projekt_MVC.Models.Role", b =>
                {
                    b.Navigation("Uzytkownicy");
                });

            modelBuilder.Entity("Projekt_MVC.Models.UprawnienieAnonimowych", b =>
                {
                    b.Navigation("Forum");
                });

            modelBuilder.Entity("Projekt_MVC.Models.User", b =>
                {
                    b.Navigation("Dyskusje");

                    b.Navigation("Odpowiedzi");

                    b.Navigation("Ogloszenia");
                });
#pragma warning restore 612, 618
        }
    }
}
